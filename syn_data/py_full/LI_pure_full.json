{"label":"remove","msk":"if api_call in call_queue:\n    call_queue.$$$(api_call)","msk_intervention":"if api_call not in call_queue:\n    call_queue.$$$(api_call)"}
{"label":"append","msk":"if flag not in sys.argv:\n    sys.argv.$$$(flag)","msk_intervention":"if flag in sys.argv:\n    sys.argv.$$$(flag)"}
{"label":"append","msk":"if sub_group not in self._substitutions:\n    self._log.info('Appending new word substitution: \"{word}\" => \"{sub}\"'.format(word=word, sub=substitution))\n    self._substitutions.$$$(sub_group)","msk_intervention":"if sub_group in self._substitutions:\n    self._log.info('Appending new word substitution: \"{word}\" => \"{sub}\"'.format(word=word, sub=substitution))\n    self._substitutions.$$$(sub_group)"}
{"label":"append","msk":"if port not in self['_initialized_ports']:\n    self._call_fn(port, 'init_adapter')\n    self['_initialized_ports'].$$$(port)","msk_intervention":"if port in self['_initialized_ports']:\n    self._call_fn(port, 'init_adapter')\n    self['_initialized_ports'].$$$(port)"}
{"label":"remove","msk":"if m in mentions_set:\n    mentions_set.$$$(m)\n    deduped_mentions.append(m)","msk_intervention":"if m not in mentions_set:\n    mentions_set.$$$(m)\n    deduped_mentions.append(m)"}
{"label":"append","msk":"if channel not in self.channels:\n    channel.users.add(self.nick)\n    self.channels.$$$(channel)","msk_intervention":"if channel in self.channels:\n    channel.users.add(self.nick)\n    self.channels.$$$(channel)"}
{"label":"remove","msk":"if channel in self.channels:\n    channel.users.remove(self.nick)\n    self.channels.$$$(channel)","msk_intervention":"if channel not in self.channels:\n    channel.users.remove(self.nick)\n    self.channels.$$$(channel)"}
{"label":"append","msk":"if name not in self.names:\n    self.names.$$$(name)\n    return True","msk_intervention":"if name in self.names:\n    self.names.$$$(name)\n    return True"}
{"label":"remove","msk":"if key in missing:\n    missing.$$$(key)","msk_intervention":"if key not in missing:\n    missing.$$$(key)"}
{"label":"append","msk":"if item not in result:\n    result.$$$(item)","msk_intervention":"if item in result:\n    result.$$$(item)"}
{"label":"append","msk":"if temp not in abspath:\n    res.$$$(temp)\n    temp = abspath","msk_intervention":"if temp in abspath:\n    res.$$$(temp)\n    temp = abspath"}
{"label":"append","msk":"if 'south' not in (name.lower() for name in settings.INSTALLED_APPS):\n    print(\"Temporarily adding 'south' into INSTALLED_APPS.\")\n    settings.INSTALLED_APPS.$$$('south')","msk_intervention":"if 'south' in (name.lower() for name in settings.INSTALLED_APPS):\n    print(\"Temporarily adding 'south' into INSTALLED_APPS.\")\n    settings.INSTALLED_APPS.$$$('south')"}
{"label":"append","msk":"if a not in [None, SOAP.ACTOR_NEXT]:\n    results.$$$(a)","msk_intervention":"if a in [None, SOAP.ACTOR_NEXT]:\n    results.$$$(a)"}
{"label":"append","msk":"if func not in self.event_funcs[etype]:\n    self.event_funcs[etype].$$$(func)","msk_intervention":"if func in self.event_funcs[etype]:\n    self.event_funcs[etype].$$$(func)"}
{"label":"append","msk":"if n not in xmlattrs:\n    xmlattrs.$$$(n)\n    inherited.append(a)","msk_intervention":"if n in xmlattrs:\n    xmlattrs.$$$(n)\n    inherited.append(a)"}
{"label":"append","msk":"if k not in self._column_name_idx:\n    self._column_name_idx[k] = len(self._column_name_list)\n    self._column_name_list.$$$(k)","msk_intervention":"if k in self._column_name_idx:\n    self._column_name_idx[k] = len(self._column_name_list)\n    self._column_name_list.$$$(k)"}
{"label":"append","msk":"if x not in a:\n    a.$$$(x)","msk_intervention":"if x in a:\n    a.$$$(x)"}
{"label":"append","msk":"if base.__name__ not in IGNORE_CLASSES:\n    class_list.$$$(Uri(base.__name__))","msk_intervention":"if base.__name__ in IGNORE_CLASSES:\n    class_list.$$$(Uri(base.__name__))"}
{"label":"append","msk":"if fullpath not in ret:\n    ret.$$$(fullpath)","msk_intervention":"if fullpath in ret:\n    ret.$$$(fullpath)"}
{"label":"append","msk":"if i not in ret:\n    ret.$$$(i)","msk_intervention":"if i in ret:\n    ret.$$$(i)"}
{"label":"append","msk":"if key not in ['__header__', '__version__', '__globals__']:\n    keys.$$$(key)","msk_intervention":"if key in ['__header__', '__version__', '__globals__']:\n    keys.$$$(key)"}
{"label":"remove","msk":"if 'autoSave' in l:\n    l.$$$('autoSave')\n    l.insert(0, 'autoSave')","msk_intervention":"if 'autoSave' not in l:\n    l.$$$('autoSave')\n    l.insert(0, 'autoSave')"}
{"label":"remove","msk":"if value in lst:\n    lst.$$$(value)","msk_intervention":"if value not in lst:\n    lst.$$$(value)"}
{"label":"append","msk":"if value not in lst:\n    lst.$$$(value)","msk_intervention":"if value in lst:\n    lst.$$$(value)"}
{"label":"append","msk":"if date_dict not in month_dicts:\n    month_dicts.$$$(date_dict)","msk_intervention":"if date_dict in month_dicts:\n    month_dicts.$$$(date_dict)"}
{"label":"remove","msk":"if gateless_region in regions:\n    regions.$$$(gateless_region)","msk_intervention":"if gateless_region not in regions:\n    regions.$$$(gateless_region)"}
{"label":"append","msk":"if gene_name not in self.coregenomes:\n    self.coregenomes.$$$(gene_name)","msk_intervention":"if gene_name in self.coregenomes:\n    self.coregenomes.$$$(gene_name)"}
{"label":"append","msk":"if i not in gathered_epsilons:\n    gathered_epsilons[i] = {}\n    q = _otq()\n    q.$$$(i)\n    while q:\n        s = q.popleft()\n        for j in self._transitions.setdefault(s, {}).setdefault(NFA.EPSILON, set()):\n            gathered_epsilons[i][j] = s if j not in gathered_epsilons[i] else self.choose(s, j)\n            q.append(j)","msk_intervention":"if i in gathered_epsilons:\n    gathered_epsilons[i] = {}\n    q = _otq()\n    q.$$$(i)\n    while q:\n        s = q.popleft()\n        for j in self._transitions.setdefault(s, {}).setdefault(NFA.EPSILON, set()):\n            gathered_epsilons[i][j] = s if j not in gathered_epsilons[i] else self.choose(s, j)\n            q.append(j)"}
{"label":"append","msk":"if dn not in self.__pending_mod_dn__:\n    self.__pending_mod_dn__.$$$(dn)\n    self.__mod_queue__[dn] = []","msk_intervention":"if dn in self.__pending_mod_dn__:\n    self.__pending_mod_dn__.$$$(dn)\n    self.__mod_queue__[dn] = []"}
{"label":"append","msk":"if referent not in found:\n    to_process.$$$(referent)","msk_intervention":"if referent in found:\n    to_process.$$$(referent)"}
{"label":"append","msk":"if next_state.stateid not in pathstates:\n    queue.$$$([pathlen + 1, next_state])\n    pathstates[next_state.stateid] = pathlen + 1","msk_intervention":"if next_state.stateid in pathstates:\n    queue.$$$([pathlen + 1, next_state])\n    pathstates[next_state.stateid] = pathlen + 1"}
{"label":"append","msk":"if ref not in _displayhooks:\n    _displayhooks.$$$(ref)","msk_intervention":"if ref in _displayhooks:\n    _displayhooks.$$$(ref)"}
{"label":"append","msk":"if ref not in _excepthooks:\n    _excepthooks.$$$(ref)","msk_intervention":"if ref in _excepthooks:\n    _excepthooks.$$$(ref)"}
{"label":"append","msk":"if succ not in walked:\n    walked.add(curr)\n    stack.$$$(succ)","msk_intervention":"if succ in walked:\n    walked.add(curr)\n    stack.$$$(succ)"}
{"label":"append","msk":"if comment_round_name not in comment_rounds:\n    comment_rounds[comment_round_name] = []\n    ordered_comment_round_names.$$$(comment_round_name)","msk_intervention":"if comment_round_name in comment_rounds:\n    comment_rounds[comment_round_name] = []\n    ordered_comment_round_names.$$$(comment_round_name)"}
{"label":"append","msk":"if key not in [self.manifest_file]:\n    files.$$$(key)","msk_intervention":"if key in [self.manifest_file]:\n    files.$$$(key)"}
{"label":"remove","msk":"if node_id in node_set:\n    node_set.$$$(node_id)","msk_intervention":"if node_id not in node_set:\n    node_set.$$$(node_id)"}
{"label":"append","msk":"if u not in s_u:\n    s_u.$$$(u)","msk_intervention":"if u in s_u:\n    s_u.$$$(u)"}
{"label":"append","msk":"if dup not in one:\n    one.$$$(dup)","msk_intervention":"if dup in one:\n    one.$$$(dup)"}
{"label":"append","msk":"if name not in cache:\n    cache.$$$(name)\n    npkg.append(p)\n    nsize.append(s)","msk_intervention":"if name in cache:\n    cache.$$$(name)\n    npkg.append(p)\n    nsize.append(s)"}
{"label":"append","msk":"if mas not in self.dependencies:\n    packages.$$$(mas)","msk_intervention":"if mas in self.dependencies:\n    packages.$$$(mas)"}
{"label":"remove","msk":"if mas in self.dependencies:\n    self.master_packages.$$$(mas)","msk_intervention":"if mas not in self.dependencies:\n    self.master_packages.$$$(mas)"}
{"label":"append","msk":"if parent not in dep.parent:\n    dep.parent.$$$(parent)","msk_intervention":"if parent in dep.parent:\n    dep.parent.$$$(parent)"}
{"label":"append","msk":"if parent not in dep.parent:\n    dep.parent.$$$(parent)","msk_intervention":"if parent in dep.parent:\n    dep.parent.$$$(parent)"}
{"label":"append","msk":"if widget.config_name not in names:\n    names.$$$(widget.config_name)","msk_intervention":"if widget.config_name in names:\n    names.$$$(widget.config_name)"}
{"label":"append","msk":"if str(self.config.build_dir) not in sys.path:\n    sys.path.$$$(str(self.config.build_dir))","msk_intervention":"if str(self.config.build_dir) in sys.path:\n    sys.path.$$$(str(self.config.build_dir))"}
{"label":"append","msk":"if str(self.config.build_dir) not in sys.path:\n    sys.path.$$$(str(self.config.build_dir))","msk_intervention":"if str(self.config.build_dir) in sys.path:\n    sys.path.$$$(str(self.config.build_dir))"}
{"label":"append","msk":"if '{} band transit'.format(band) not in self.constraints:\n    self.constraints.$$$('{} band transit'.format(band))","msk_intervention":"if '{} band transit'.format(band) in self.constraints:\n    self.constraints.$$$('{} band transit'.format(band))"}
{"label":"append","msk":"if prop not in self.constraints:\n    self.constraints.$$$(prop)","msk_intervention":"if prop in self.constraints:\n    self.constraints.$$$(prop)"}
{"label":"append","msk":"if name not in self.constraints:\n    self.constraints.$$$(name)","msk_intervention":"if name in self.constraints:\n    self.constraints.$$$(name)"}
{"label":"append","msk":"if state not in states:\n    states.$$$(state)","msk_intervention":"if state in states:\n    states.$$$(state)"}
{"label":"append","msk":"if key not in all_keys:\n    all_keys.$$$(key)","msk_intervention":"if key in all_keys:\n    all_keys.$$$(key)"}
{"label":"append","msk":"if doc.doctype.lower() not in printed:\n    lines.$$$(spacer + doc.__str__())","msk_intervention":"if doc.doctype.lower() in printed:\n    lines.$$$(spacer + doc.__str__())"}
{"label":"append","msk":"if modk not in result:\n    result.$$$(modk)","msk_intervention":"if modk in result:\n    result.$$$(modk)"}
{"label":"append","msk":"if dirpath not in self.basepaths:\n    self.basepaths.$$$(dirpath)\n    self.rescan()","msk_intervention":"if dirpath in self.basepaths:\n    self.basepaths.$$$(dirpath)\n    self.rescan()"}
{"label":"append","msk":"if parameter.name.lower() not in self.paramorder:\n    self.paramorder.$$$(parameter.name.lower())","msk_intervention":"if parameter.name.lower() in self.paramorder:\n    self.paramorder.$$$(parameter.name.lower())"}
{"label":"append","msk":"if module not in result:\n    result.$$$(module)","msk_intervention":"if module in result:\n    result.$$$(module)"}
{"label":"append","msk":"if item not in output:\n    output.$$$(item)","msk_intervention":"if item in output:\n    output.$$$(item)"}
{"label":"remove","msk":"if key in self._keys:\n    self._keys.$$$(key)","msk_intervention":"if key not in self._keys:\n    self._keys.$$$(key)"}
{"label":"append","msk":"if t not in local_types:\n    local_types.$$$(t)","msk_intervention":"if t in local_types:\n    local_types.$$$(t)"}
{"label":"remove","msk":"if tree in self.dependent_on:\n    self.dependent_on.$$$(tree)","msk_intervention":"if tree not in self.dependent_on:\n    self.dependent_on.$$$(tree)"}
{"label":"remove","msk":"if '' in parent_paths:\n    parent_paths.$$$('')","msk_intervention":"if '' not in parent_paths:\n    parent_paths.$$$('')"}
{"label":"remove","msk":"if port in self.__closed:\n    self.__closed.$$$(port)","msk_intervention":"if port not in self.__closed:\n    self.__closed.$$$(port)"}
{"label":"append","msk":"if backbone_view_class not in self._registry:\n    self._registry.$$$(backbone_view_class)","msk_intervention":"if backbone_view_class in self._registry:\n    self._registry.$$$(backbone_view_class)"}
{"label":"remove","msk":"if fw_id in self.res.get(cnt).get('fw_id_lst'):\n    self.res[cnt]['used'] = self.res[cnt]['used'] - 1\n    self.res.get(cnt).get('fw_id_lst').$$$(fw_id)\n    return","msk_intervention":"if fw_id not in self.res.get(cnt).get('fw_id_lst'):\n    self.res[cnt]['used'] = self.res[cnt]['used'] - 1\n    self.res.get(cnt).get('fw_id_lst').$$$(fw_id)\n    return"}
{"label":"append","msk":"if href not in self.engine.server_credential:\n    self.engine.server_credential.$$$(href)","msk_intervention":"if href in self.engine.server_credential:\n    self.engine.server_credential.$$$(href)"}
{"label":"remove","msk":"if href in self.engine.server_credential:\n    self.engine.server_credential.$$$(href)","msk_intervention":"if href not in self.engine.server_credential:\n    self.engine.server_credential.$$$(href)"}
{"label":"remove","msk":"if element in self.granted_element:\n    self.data['granted_element'].$$$(element)","msk_intervention":"if element not in self.granted_element:\n    self.data['granted_element'].$$$(element)"}
{"label":"append","msk":"if callback not in self._cb_aldb_loaded:\n    self._cb_aldb_loaded.$$$(callback)","msk_intervention":"if callback in self._cb_aldb_loaded:\n    self._cb_aldb_loaded.$$$(callback)"}
{"label":"remove","msk":"if 'DFLT' in scripts:\n    scripts.$$$('DFLT')\n    scripts.insert(0, 'DFLT')","msk_intervention":"if 'DFLT' not in scripts:\n    scripts.$$$('DFLT')\n    scripts.insert(0, 'DFLT')"}
{"label":"remove","msk":"if model in self._selected:\n    self._selected.$$$(model)","msk_intervention":"if model not in self._selected:\n    self._selected.$$$(model)"}
{"label":"append","msk":"if controller not in self.__action_registered_controllers:\n    try:\n        controller.register_actions(shortcut_manager)\n    except Exception as e:\n        logger.error('Error while registering action for {0}: {1}'.format(controller.__class__.__name__, e))\n    self.__action_registered_controllers.$$$(controller)","msk_intervention":"if controller in self.__action_registered_controllers:\n    try:\n        controller.register_actions(shortcut_manager)\n    except Exception as e:\n        logger.error('Error while registering action for {0}: {1}'.format(controller.__class__.__name__, e))\n    self.__action_registered_controllers.$$$(controller)"}
{"label":"append","msk":"if self.key not in value['conversations']:\n    value['conversations'].$$$(self.key)","msk_intervention":"if self.key in value['conversations']:\n    value['conversations'].$$$(self.key)"}
{"label":"append","msk":"if variation_value not in variations_list:\n    variations_list.$$$(variation_value)","msk_intervention":"if variation_value in variations_list:\n    variations_list.$$$(variation_value)"}
{"label":"append","msk":"if peer not in self.otherPeers:\n    self.otherPeers.$$$(peer)\n    return peer","msk_intervention":"if peer in self.otherPeers:\n    self.otherPeers.$$$(peer)\n    return peer"}
{"label":"append","msk":"if e not in rs:\n    rs.$$$(e)","msk_intervention":"if e in rs:\n    rs.$$$(e)"}
{"label":"append","msk":"if 'underline' not in c:\n    c.$$$('underline')\n    el.attrib['class'] = ' '.join(c)","msk_intervention":"if 'underline' in c:\n    c.$$$('underline')\n    el.attrib['class'] = ' '.join(c)"}
{"label":"append","msk":"if 'bokeh' not in r.library_includes:\n    r.library_includes.$$$('bokeh')","msk_intervention":"if 'bokeh' in r.library_includes:\n    r.library_includes.$$$('bokeh')"}
{"label":"append","msk":"if 'katex' not in r.library_includes:\n    r.library_includes.$$$('katex')","msk_intervention":"if 'katex' in r.library_includes:\n    r.library_includes.$$$('katex')"}
{"label":"append","msk":"if cleaned not in _logging_paths:\n    _logging_paths.$$$(cleaned)","msk_intervention":"if cleaned in _logging_paths:\n    _logging_paths.$$$(cleaned)"}
{"label":"remove","msk":"if path in recent_paths:\n    recent_paths.$$$(path)","msk_intervention":"if path not in recent_paths:\n    recent_paths.$$$(path)"}
{"label":"remove","msk":"if path in sys.path:\n    sys.path.$$$(path)\n    return True","msk_intervention":"if path not in sys.path:\n    sys.path.$$$(path)\n    return True"}
{"label":"append","msk":"if 'PATH' not in keys:\n    keys.$$$('PATH')","msk_intervention":"if 'PATH' in keys:\n    keys.$$$('PATH')"}
{"label":"remove","msk":"if callback in self._callbacks:\n    self._callbacks.$$$(callback)","msk_intervention":"if callback not in self._callbacks:\n    self._callbacks.$$$(callback)"}
{"label":"append","msk":"if decoration not in self._decorations:\n    self._decorations.$$$(decoration)\n    self._decorations = sorted(self._decorations, key=lambda sel: sel.draw_order)\n    self.editor.setExtraSelections(self._decorations)\n    return True","msk_intervention":"if decoration in self._decorations:\n    self._decorations.$$$(decoration)\n    self._decorations = sorted(self._decorations, key=lambda sel: sel.draw_order)\n    self.editor.setExtraSelections(self._decorations)\n    return True"}
{"label":"append","msk":"if 'utf_8' not in default_encodings:\n    default_encodings.$$$('utf_8')","msk_intervention":"if 'utf_8' in default_encodings:\n    default_encodings.$$$('utf_8')"}
{"label":"append","msk":"if s not in self._stubs:\n    self._stubs.$$$(s)","msk_intervention":"if s in self._stubs:\n    self._stubs.$$$(s)"}
{"label":"append","msk":"if milestone not in self.milestones.get(codelistoid, []):\n    self._milestones.setdefault(codelistoid, []).$$$(milestone)","msk_intervention":"if milestone in self.milestones.get(codelistoid, []):\n    self._milestones.setdefault(codelistoid, []).$$$(milestone)"}
{"label":"append","msk":"if item not in ret:\n    ret.$$$(item)","msk_intervention":"if item in ret:\n    ret.$$$(item)"}
{"label":"append","msk":"if var not in vars_list:\n    scope.$$$(var)","msk_intervention":"if var in vars_list:\n    scope.$$$(var)"}
{"label":"append","msk":"if x not in result:\n    result.$$$(x)","msk_intervention":"if x in result:\n    result.$$$(x)"}
{"label":"append","msk":"if p_value not in self.stack:\n    self.stack.$$$(p_value)","msk_intervention":"if p_value in self.stack:\n    self.stack.$$$(p_value)"}
{"label":"remove","msk":"if receiver in self.event_receivers:\n    self.event_receivers.$$$(receiver)","msk_intervention":"if receiver not in self.event_receivers:\n    self.event_receivers.$$$(receiver)"}
{"label":"remove","msk":"if '__common__' in themes:\n    themes.$$$('__common__')","msk_intervention":"if '__common__' not in themes:\n    themes.$$$('__common__')"}
{"label":"append","msk":"if next_node.name not in ['barrier', 'snapshot', 'save', 'load', 'noise']:\n    support_list.$$$(list(qa))","msk_intervention":"if next_node.name in ['barrier', 'snapshot', 'save', 'load', 'noise']:\n    support_list.$$$(list(qa))"}
{"label":"remove","msk":"if ws in self.subscribers:\n    self.subscribers.$$$(ws)","msk_intervention":"if ws not in self.subscribers:\n    self.subscribers.$$$(ws)"}
{"label":"append","msk":"if from_module not in obj.node.depends:\n    obj.node.depends.$$$(from_module)","msk_intervention":"if from_module in obj.node.depends:\n    obj.node.depends.$$$(from_module)"}
{"label":"append","msk":"if dim_name not in out_dims:\n    completely_lost.$$$(dim_name)","msk_intervention":"if dim_name in out_dims:\n    completely_lost.$$$(dim_name)"}
{"label":"append","msk":"if category not in self.poi_category_names:\n    self.poi_category_names.$$$(category)","msk_intervention":"if category in self.poi_category_names:\n    self.poi_category_names.$$$(category)"}
{"label":"append","msk":"if bl_idx not in blocks:\n    blocks.$$$(bl_idx)","msk_intervention":"if bl_idx in blocks:\n    blocks.$$$(bl_idx)"}
{"label":"append","msk":"if 'term' not in include:\n    include.$$$('term')","msk_intervention":"if 'term' in include:\n    include.$$$('term')"}
{"label":"append","msk":"if 'students' not in include:\n    include.$$$('students')","msk_intervention":"if 'students' in include:\n    include.$$$('students')"}
{"label":"remove","msk":"if observer in self.m_observers:\n    self.m_observers.$$$(observer)","msk_intervention":"if observer not in self.m_observers:\n    self.m_observers.$$$(observer)"}
{"label":"append","msk":"if path not in self.paths:\n    self.paths.$$$(path)","msk_intervention":"if path in self.paths:\n    self.paths.$$$(path)"}
{"label":"remove","msk":"if flag in self.compiler_so:\n    self.compiler_so.$$$(flag)","msk_intervention":"if flag not in self.compiler_so:\n    self.compiler_so.$$$(flag)"}
{"label":"append","msk":"if s not in stats:\n    stats.$$$(s)","msk_intervention":"if s in stats:\n    stats.$$$(s)"}
{"label":"append","msk":"if x not in seen:\n    result.$$$(x)\n    seen.add(x)","msk_intervention":"if x in seen:\n    result.$$$(x)\n    seen.add(x)"}
{"label":"remove","msk":"if 'EGG-INFO' in dirs:\n    dirs.$$$('EGG-INFO')","msk_intervention":"if 'EGG-INFO' not in dirs:\n    dirs.$$$('EGG-INFO')"}
{"label":"append","msk":"if transformer not in self._transformers:\n    self._transformers.$$$(transformer)\n    self.sort_transformers()","msk_intervention":"if transformer in self._transformers:\n    self._transformers.$$$(transformer)\n    self.sort_transformers()"}
{"label":"remove","msk":"if transformer in self._transformers:\n    self._transformers.$$$(transformer)","msk_intervention":"if transformer not in self._transformers:\n    self._transformers.$$$(transformer)"}
{"label":"append","msk":"if checker not in self._checkers:\n    self._checkers.$$$(checker)\n    self.sort_checkers()","msk_intervention":"if checker in self._checkers:\n    self._checkers.$$$(checker)\n    self.sort_checkers()"}
{"label":"remove","msk":"if checker in self._checkers:\n    self._checkers.$$$(checker)","msk_intervention":"if checker not in self._checkers:\n    self._checkers.$$$(checker)"}
{"label":"append","msk":"if nn not in unique_dict:\n    unique.$$$(nn)\n    unique_dict[nn] = None","msk_intervention":"if nn in unique_dict:\n    unique.$$$(nn)\n    unique_dict[nn] = None"}
{"label":"append","msk":"if arg not in defaults:\n    warn(template.format(argument=arg, cname=cls.__name__, defaults=defaults))\n    fails.$$$(arg)","msk_intervention":"if arg in defaults:\n    warn(template.format(argument=arg, cname=cls.__name__, defaults=defaults))\n    fails.$$$(arg)"}
{"label":"append","msk":"if service not in self.services:\n    self.services.$$$(service)","msk_intervention":"if service in self.services:\n    self.services.$$$(service)"}
{"label":"append","msk":"if neighbor not in G:\n    G[node].$$$(neighbor)\n    G[neighbor] = [node]\n    frontier.$$$(neighbor)","msk_intervention":"if neighbor in G:\n    G[node].$$$(neighbor)\n    G[neighbor] = [node]\n    frontier.$$$(neighbor)"}
{"label":"remove","msk":"if [callback, device] in self._update_callbacks:\n    self._update_callbacks.$$$([callback, device])\n    _LOGGER.debug('Removed update callback %s for %s', callback, device)","msk_intervention":"if [callback, device] not in self._update_callbacks:\n    self._update_callbacks.$$$([callback, device])\n    _LOGGER.debug('Removed update callback %s for %s', callback, device)"}
{"label":"append","msk":"if element not in EMPTIES:\n    self.obj.setdefault(field, [])\n    self.obj.get(field).$$$(element)","msk_intervention":"if element in EMPTIES:\n    self.obj.setdefault(field, [])\n    self.obj.get(field).$$$(element)"}
{"label":"append","msk":"if file not in included:\n    array.$$$(file)","msk_intervention":"if file in included:\n    array.$$$(file)"}
{"label":"append","msk":"if tag.lower() not in SIGNAL_TYPE_LIST:\n    markdown_cell = group_tag_code.TAG_TABLE_HEADER\n    markdown_cell = markdown_cell.replace('Tag i', tag)\n    for notebook_file in dict_by_tag[tag]:\n        split_path = notebook_file.split('\\\\')\n        notebook_type = split_path[-2]\n        notebook_name = split_path[-1].split('&')[0]\n        notebook_title = split_path[-1].split('&')[1]\n        markdown_cell += \"\\t<tr>\\n\\t\\t<td width='20%' class='header_image_color_\" + str(NOTEBOOK_KEYS[notebook_type]) + \"'><img src='..\/..\/images\/icons\/\" + notebook_type.title() + \".png' width='15%'>\\n\\t\\t<\/td>\"\n        markdown_cell += \"\\n\\t\\t<td width='60%' class='center_cell open_cell_light'>\" + notebook_title + '\\n\\t\\t<\/td>'\n        markdown_cell += \"\\n\\t\\t<td width='20%' class='center_cell'>\\n\\t\\t\\t<a href='..\/\" + notebook_type.title() + '\/' + notebook_name + \"'><div class='file_icon'><\/div><\/a>\\n\\t\\t<\/td>\\n\\t<\/tr>\"\n    markdown_cell += '<\/table>'\n    notebook_object['cells'].$$$(nb.v4.new_markdown_cell(markdown_cell))","msk_intervention":"if tag.lower() in SIGNAL_TYPE_LIST:\n    markdown_cell = group_tag_code.TAG_TABLE_HEADER\n    markdown_cell = markdown_cell.replace('Tag i', tag)\n    for notebook_file in dict_by_tag[tag]:\n        split_path = notebook_file.split('\\\\')\n        notebook_type = split_path[-2]\n        notebook_name = split_path[-1].split('&')[0]\n        notebook_title = split_path[-1].split('&')[1]\n        markdown_cell += \"\\t<tr>\\n\\t\\t<td width='20%' class='header_image_color_\" + str(NOTEBOOK_KEYS[notebook_type]) + \"'><img src='..\/..\/images\/icons\/\" + notebook_type.title() + \".png' width='15%'>\\n\\t\\t<\/td>\"\n        markdown_cell += \"\\n\\t\\t<td width='60%' class='center_cell open_cell_light'>\" + notebook_title + '\\n\\t\\t<\/td>'\n        markdown_cell += \"\\n\\t\\t<td width='20%' class='center_cell'>\\n\\t\\t\\t<a href='..\/\" + notebook_type.title() + '\/' + notebook_name + \"'><div class='file_icon'><\/div><\/a>\\n\\t\\t<\/td>\\n\\t<\/tr>\"\n    markdown_cell += '<\/table>'\n    notebook_object['cells'].$$$(nb.v4.new_markdown_cell(markdown_cell))"}
{"label":"append","msk":"if i not in valid_keys:\n    bool_out = False\n    inv_keys.$$$(i)","msk_intervention":"if i in valid_keys:\n    bool_out = False\n    inv_keys.$$$(i)"}
{"label":"append","msk":"if el not in result:\n    result.$$$(el)","msk_intervention":"if el in result:\n    result.$$$(el)"}
{"label":"remove","msk":"if lst_idx in self.not_in_result_root_match_idx:\n    self.not_in_result_root_match_idx.$$$(lst_idx)","msk_intervention":"if lst_idx not in self.not_in_result_root_match_idx:\n    self.not_in_result_root_match_idx.$$$(lst_idx)"}
{"label":"append","msk":"if hook not in self._hooks[event]:\n    self._hooks[event].$$$(hook)","msk_intervention":"if hook in self._hooks[event]:\n    self._hooks[event].$$$(hook)"}
{"label":"remove","msk":"if hook in self._hooks[event]:\n    self._hooks[event].$$$(hook)","msk_intervention":"if hook not in self._hooks[event]:\n    self._hooks[event].$$$(hook)"}
{"label":"append","msk":"if limiter not in self.rate_limiters:\n    self.subscribe('capacity', limiter.on_capacity)\n    self.rate_limiters.$$$(limiter)","msk_intervention":"if limiter in self.rate_limiters:\n    self.subscribe('capacity', limiter.on_capacity)\n    self.rate_limiters.$$$(limiter)"}
{"label":"remove","msk":"if limiter in self.rate_limiters:\n    self.unsubscribe('capacity', limiter.on_capacity)\n    self.rate_limiters.$$$(limiter)","msk_intervention":"if limiter not in self.rate_limiters:\n    self.unsubscribe('capacity', limiter.on_capacity)\n    self.rate_limiters.$$$(limiter)"}
{"label":"remove","msk":"if flag in each:\n    result = set(each)\n    result.$$$(flag)\n    return result","msk_intervention":"if flag not in each:\n    result = set(each)\n    result.$$$(flag)\n    return result"}
{"label":"remove","msk":"if watchdog in self.__running_registry:\n    self.__running_registry.$$$(watchdog)\n    self.__done_registry.append(watchdog)\n    self.cleanup_event().set()","msk_intervention":"if watchdog not in self.__running_registry:\n    self.__running_registry.$$$(watchdog)\n    self.__done_registry.append(watchdog)\n    self.cleanup_event().set()"}
{"label":"append","msk":"if i not in l:\n    l.$$$(i)","msk_intervention":"if i in l:\n    l.$$$(i)"}
{"label":"remove","msk":"if filename in self._filenames:\n    self._filenames.$$$(filename)","msk_intervention":"if filename not in self._filenames:\n    self._filenames.$$$(filename)"}
{"label":"remove","msk":"if anchor in cls.paths:\n    cls.paths.$$$(anchor)","msk_intervention":"if anchor not in cls.paths:\n    cls.paths.$$$(anchor)"}
{"label":"remove","msk":"if role in self.__roles:\n    self.__roles.$$$(role)","msk_intervention":"if role not in self.__roles:\n    self.__roles.$$$(role)"}
{"label":"append","msk":"if k not in res_ids:\n    for_removal.$$$(k)","msk_intervention":"if k in res_ids:\n    for_removal.$$$(k)"}
{"label":"append","msk":"if limit not in self.limit_to:\n    self.limit_to.$$$(limit)","msk_intervention":"if limit in self.limit_to:\n    self.limit_to.$$$(limit)"}
{"label":"append","msk":"if repo not in starred_repos:\n    repos_list.$$$(repo)","msk_intervention":"if repo in starred_repos:\n    repos_list.$$$(repo)"}
{"label":"append","msk":"if str(e) not in self._errors:\n    self._errors.$$$(str(e))","msk_intervention":"if str(e) in self._errors:\n    self._errors.$$$(str(e))"}
{"label":"append","msk":"if message not in self._warnings:\n    self._warnings.$$$(message)","msk_intervention":"if message in self._warnings:\n    self._warnings.$$$(message)"}
{"label":"remove","msk":"if name in tags:\n    tags.$$$(name)","msk_intervention":"if name not in tags:\n    tags.$$$(name)"}
{"label":"append","msk":"if filename not in self.__input_files:\n    self.__input_files.$$$(filename)","msk_intervention":"if filename in self.__input_files:\n    self.__input_files.$$$(filename)"}
{"label":"append","msk":"if filename not in self.__output_files:\n    self.__output_files.$$$(filename)","msk_intervention":"if filename in self.__output_files:\n    self.__output_files.$$$(filename)"}
{"label":"append","msk":"if filename not in self.__checkpoint_files:\n    self.__checkpoint_files.$$$(filename)","msk_intervention":"if filename in self.__checkpoint_files:\n    self.__checkpoint_files.$$$(filename)"}
{"label":"append","msk":"if filename not in self.__input_files:\n    self.__input_files.$$$(filename)","msk_intervention":"if filename in self.__input_files:\n    self.__input_files.$$$(filename)"}
{"label":"append","msk":"if filename not in self.__input_files:\n    self.__input_files.$$$(filename)","msk_intervention":"if filename in self.__input_files:\n    self.__input_files.$$$(filename)"}
{"label":"append","msk":"if command not in self.__var_cmds:\n    self.__var_cmds.$$$(command)\n    macro = self.__bad_macro_chars.sub('', command)\n    self.add_condor_cmd(command, '$(macro' + macro + ')')","msk_intervention":"if command in self.__var_cmds:\n    self.__var_cmds.$$$(command)\n    macro = self.__bad_macro_chars.sub('', command)\n    self.add_condor_cmd(command, '$(macro' + macro + ')')"}
{"label":"append","msk":"if elem not in new:\n    new.$$$(elem)","msk_intervention":"if elem in new:\n    new.$$$(elem)"}
{"label":"append","msk":"if next_word not in self._db[key]:\n    self._db[key].$$$(next_word)","msk_intervention":"if next_word in self._db[key]:\n    self._db[key].$$$(next_word)"}
{"label":"append","msk":"if index_point not in self.index:\n    self.values.append(value)\n    self.index.$$$(index_point)","msk_intervention":"if index_point in self.index:\n    self.values.append(value)\n    self.index.$$$(index_point)"}
{"label":"append","msk":"if tag not in updated_tag_list:\n    updated_tag_list.$$$(tag)","msk_intervention":"if tag in updated_tag_list:\n    updated_tag_list.$$$(tag)"}
{"label":"remove","msk":"if tag in updated_tag_list:\n    updated_tag_list.$$$(tag)","msk_intervention":"if tag not in updated_tag_list:\n    updated_tag_list.$$$(tag)"}
{"label":"append","msk":"if item not in uniq:\n    uniq.$$$(item)","msk_intervention":"if item in uniq:\n    uniq.$$$(item)"}
{"label":"remove","msk":"if observableElement in self._observables:\n    self._observables.$$$(observableElement)","msk_intervention":"if observableElement not in self._observables:\n    self._observables.$$$(observableElement)"}
{"label":"append","msk":"if module_name not in ModuleMembers:\n    ModuleMembers[module_name] = []\n    ModulesQ.$$$(module_name)\n    Group(Module, {})","msk_intervention":"if module_name in ModuleMembers:\n    ModuleMembers[module_name] = []\n    ModulesQ.$$$(module_name)\n    Group(Module, {})"}
{"label":"append","msk":"if Member not in Members:\n    Members.$$$(Member)","msk_intervention":"if Member in Members:\n    Members.$$$(Member)"}
{"label":"append","msk":"if result.key not in keys:\n    keys.$$$(result.key)","msk_intervention":"if result.key in keys:\n    keys.$$$(result.key)"}
{"label":"remove","msk":"if socket in self._sockets:\n    socket.on_closed.disconnect(self.remove_socket)\n    self._sockets.$$$(socket)","msk_intervention":"if socket not in self._sockets:\n    socket.on_closed.disconnect(self.remove_socket)\n    self._sockets.$$$(socket)"}
{"label":"append","msk":"if res_atom.parent not in nearby_residues:\n    nearby_residues.$$$(res_atom.parent)","msk_intervention":"if res_atom.parent in nearby_residues:\n    nearby_residues.$$$(res_atom.parent)"}
{"label":"remove","msk":"if self in self._server._pending_set:\n    self._server._pending_set.$$$(self)","msk_intervention":"if self not in self._server._pending_set:\n    self._server._pending_set.$$$(self)"}
{"label":"append","msk":"if qarn not in queue_arns:\n    queue_arns.$$$(qarn)","msk_intervention":"if qarn in queue_arns:\n    queue_arns.$$$(qarn)"}
{"label":"remove","msk":"if a in self.attachments:\n    self.attachments.$$$(a)","msk_intervention":"if a not in self.attachments:\n    self.attachments.$$$(a)"}
{"label":"remove","msk":"if p in self.participants:\n    self.participants.$$$(p)","msk_intervention":"if p not in self.participants:\n    self.participants.$$$(p)"}
{"label":"remove","msk":"if t in self.tournaments:\n    self.tournaments.$$$(t)","msk_intervention":"if t not in self.tournaments:\n    self.tournaments.$$$(t)"}
{"label":"remove","msk":"if die in self._dice:\n    self._dice.$$$(die)","msk_intervention":"if die not in self._dice:\n    self._dice.$$$(die)"}
{"label":"append","msk":"if nick not in self._user_nicks:\n    self._user_nicks.$$$(nick)","msk_intervention":"if nick in self._user_nicks:\n    self._user_nicks.$$$(nick)"}
{"label":"append","msk":"if i not in tmp:\n    self._exclude.$$$(i)","msk_intervention":"if i in tmp:\n    self._exclude.$$$(i)"}
{"label":"append","msk":"if memberName not in expectedArgList:\n    expectedArgList.$$$(memberName)","msk_intervention":"if memberName in expectedArgList:\n    expectedArgList.$$$(memberName)"}
{"label":"append","msk":"if type_ not in self.__exclusion_list:\n    self.__exclusion_list.$$$(type_)","msk_intervention":"if type_ in self.__exclusion_list:\n    self.__exclusion_list.$$$(type_)"}
{"label":"remove","msk":"if type_ in self.__exclusion_list:\n    self.__exclusion_list.$$$(type_)","msk_intervention":"if type_ not in self.__exclusion_list:\n    self.__exclusion_list.$$$(type_)"}
{"label":"append","msk":"if i not in stopwords_list:\n    list_clean.$$$(i)","msk_intervention":"if i in stopwords_list:\n    list_clean.$$$(i)"}
{"label":"remove","msk":"if item in self:\n    super(NGram, self).$$$(item)\n    del self.length[item]\n    for ngram in self.splititem(item):\n        del self._grams[ngram][item]","msk_intervention":"if item not in self:\n    super(NGram, self).$$$(item)\n    del self.length[item]\n    for ngram in self.splititem(item):\n        del self._grams[ngram][item]"}
{"label":"remove","msk":"if listener in _stepListeners:\n    _stepListeners.$$$(listener)\n    return True","msk_intervention":"if listener not in _stepListeners:\n    _stepListeners.$$$(listener)\n    return True"}
{"label":"append","msk":"if i not in actual_classes:\n    self['puppetclasses'].$$$(i)","msk_intervention":"if i in actual_classes:\n    self['puppetclasses'].$$$(i)"}
{"label":"append","msk":"if alarm not in self._alarms:\n    self._set('alarm', alarm, multi=True)\n    self._alarms.$$$(alarm)","msk_intervention":"if alarm in self._alarms:\n    self._set('alarm', alarm, multi=True)\n    self._alarms.$$$(alarm)"}
{"label":"append","msk":"if plugin not in self._plugins:\n    self._set(command, plugin, multi=True)\n    self._plugins.$$$(plugin)","msk_intervention":"if plugin in self._plugins:\n    self._set(command, plugin, multi=True)\n    self._plugins.$$$(plugin)"}
{"label":"append","msk":"if key not in field_list:\n    field_list.$$$(key)","msk_intervention":"if key in field_list:\n    field_list.$$$(key)"}
{"label":"append","msk":"if key not in keys:\n    keys.$$$(key)","msk_intervention":"if key in keys:\n    keys.$$$(key)"}
{"label":"append","msk":"if peer_ip not in self.peer_ips:\n    self.peer_ips.$$$(peer_ip)","msk_intervention":"if peer_ip in self.peer_ips:\n    self.peer_ips.$$$(peer_ip)"}
{"label":"append","msk":"if name not in self._stop_dags:\n    self._stop_dags.$$$(name)","msk_intervention":"if name in self._stop_dags:\n    self._stop_dags.$$$(name)"}
{"label":"append","msk":"if workflow_id not in stopped_workflows:\n    client = Client(SignalConnection(**consumer.app.user_options['config'].signal, auto_connect=True), request_key=workflow_id)\n    client.send(Request(action='stop_workflow'))\n    stopped_workflows.$$$(workflow_id)","msk_intervention":"if workflow_id in stopped_workflows:\n    client = Client(SignalConnection(**consumer.app.user_options['config'].signal, auto_connect=True), request_key=workflow_id)\n    client.send(Request(action='stop_workflow'))\n    stopped_workflows.$$$(workflow_id)"}
{"label":"append","msk":"if item not in out_list:\n    out_list.$$$(item)","msk_intervention":"if item in out_list:\n    out_list.$$$(item)"}
{"label":"append","msk":"if name not in keep_names:\n    drop_names.$$$(name)","msk_intervention":"if name in keep_names:\n    drop_names.$$$(name)"}
{"label":"remove","msk":"if '' in slabels:\n    slabels.$$$('')","msk_intervention":"if '' not in slabels:\n    slabels.$$$('')"}
{"label":"append","msk":"if key not in header_list:\n    header_list.$$$(key)","msk_intervention":"if key in header_list:\n    header_list.$$$(key)"}
{"label":"append","msk":"if dist.project_name not in projects:\n    projects.$$$(dist.project_name)","msk_intervention":"if dist.project_name in projects:\n    projects.$$$(dist.project_name)"}
{"label":"append","msk":"if service_name not in self.manifest['services']:\n    self.manifest['services'].$$$(service_name)","msk_intervention":"if service_name in self.manifest['services']:\n    self.manifest['services'].$$$(service_name)"}
{"label":"append","msk":"if key not in self.defaults:\n    self.defaults.$$$(key)","msk_intervention":"if key in self.defaults:\n    self.defaults.$$$(key)"}
{"label":"append","msk":"if data not in [False, -1]:\n    data_list.$$$(data)","msk_intervention":"if data in [False, -1]:\n    data_list.$$$(data)"}
{"label":"append","msk":"if oldtype not in self._oldTypesRemaining:\n    self._oldTypesRemaining.$$$(oldtype)","msk_intervention":"if oldtype in self._oldTypesRemaining:\n    self._oldTypesRemaining.$$$(oldtype)"}
{"label":"append","msk":"if src_path not in sys.path:\n    sys.path.$$$(src_path)","msk_intervention":"if src_path in sys.path:\n    sys.path.$$$(src_path)"}
{"label":"append","msk":"if src_path not in sys.path:\n    sys.path.$$$(src_path)","msk_intervention":"if src_path in sys.path:\n    sys.path.$$$(src_path)"}
{"label":"append","msk":"if src_path not in sys.path:\n    sys.path.$$$(src_path)","msk_intervention":"if src_path in sys.path:\n    sys.path.$$$(src_path)"}
{"label":"remove","msk":"if 'meta' in keys:\n    keys.$$$('meta')","msk_intervention":"if 'meta' not in keys:\n    keys.$$$('meta')"}
{"label":"append","msk":"if src_path not in sys.path:\n    sys.path.$$$(src_path)","msk_intervention":"if src_path in sys.path:\n    sys.path.$$$(src_path)"}
{"label":"append","msk":"if i not in y:\n    y.$$$(i)","msk_intervention":"if i in y:\n    y.$$$(i)"}
{"label":"append","msk":"if label not in self.saved_categories:\n    self.saved_categories.$$$(label)","msk_intervention":"if label in self.saved_categories:\n    self.saved_categories.$$$(label)"}
{"label":"append","msk":"if x not in existing:\n    existing.$$$(x)","msk_intervention":"if x in existing:\n    existing.$$$(x)"}
{"label":"append","msk":"if input not in stack:\n    stack.$$$(input)\n    recursive_find_ancestors(input, stack)","msk_intervention":"if input in stack:\n    stack.$$$(input)\n    recursive_find_ancestors(input, stack)"}
{"label":"remove","msk":"if file_path in self._cti_files:\n    self._cti_files.$$$(file_path)\n    self._logger.info('Removed {0} from the CTI file list.'.format(file_path))","msk_intervention":"if file_path not in self._cti_files:\n    self._cti_files.$$$(file_path)\n    self._logger.info('Removed {0} from the CTI file list.'.format(file_path))"}
{"label":"append","msk":"if resource not in self._exempt:\n    self._exempt.$$$(resource)","msk_intervention":"if resource in self._exempt:\n    self._exempt.$$$(resource)"}
{"label":"append","msk":"if func not in self.hooks:\n    self.hooks.$$$(func)","msk_intervention":"if func in self.hooks:\n    self.hooks.$$$(func)"}
{"label":"remove","msk":"if func in self.hooks:\n    self.hooks.$$$(func)","msk_intervention":"if func not in self.hooks:\n    self.hooks.$$$(func)"}
{"label":"remove","msk":"if '' in packages:\n    packages.$$$('')","msk_intervention":"if '' not in packages:\n    packages.$$$('')"}
{"label":"append","msk":"if item not in self.config['files']:\n    self.config['files'].$$$(item)","msk_intervention":"if item in self.config['files']:\n    self.config['files'].$$$(item)"}
{"label":"remove","msk":"if '' in packages:\n    packages.$$$('')","msk_intervention":"if '' not in packages:\n    packages.$$$('')"}
{"label":"append","msk":"if value not in merged:\n    merged.$$$(value)","msk_intervention":"if value in merged:\n    merged.$$$(value)"}
{"label":"remove","msk":"if tool in self.current_tools:\n    self.current_tools.$$$(tool)\n    self.completed_tools.append(tool)","msk_intervention":"if tool not in self.current_tools:\n    self.current_tools.$$$(tool)\n    self.completed_tools.append(tool)"}
{"label":"remove","msk":"if self.stream.transport in self._ml_handlers:\n    self._ml_handlers.$$$(self.stream.transport)\n    self.main_loop.remove_handler(self.stream.transport)","msk_intervention":"if self.stream.transport not in self._ml_handlers:\n    self._ml_handlers.$$$(self.stream.transport)\n    self.main_loop.remove_handler(self.stream.transport)"}
{"label":"remove","msk":"if handler in self.handlers:\n    self.handlers.$$$(handler)\n    self._update_handlers()","msk_intervention":"if handler not in self.handlers:\n    self.handlers.$$$(handler)\n    self._update_handlers()"}
{"label":"append","msk":"if item not in seen:\n    seen.$$$(item)\n    new_line.$$$(item)","msk_intervention":"if item in seen:\n    seen.$$$(item)\n    new_line.$$$(item)"}
{"label":"remove","msk":"if 'id' in field_names:\n    field_names.$$$('id')","msk_intervention":"if 'id' not in field_names:\n    field_names.$$$('id')"}
{"label":"append","msk":"if image_url not in all_image_urls:\n    all_image_urls.$$$(image_url)","msk_intervention":"if image_url in all_image_urls:\n    all_image_urls.$$$(image_url)"}
{"label":"remove","msk":"if c in self.clauses:\n    self.clauses.$$$(c)","msk_intervention":"if c not in self.clauses:\n    self.clauses.$$$(c)"}
{"label":"remove","msk":"if value in l:\n    l.$$$(value)\n    l.insert(0, value)","msk_intervention":"if value not in l:\n    l.$$$(value)\n    l.insert(0, value)"}
{"label":"remove","msk":"if value in l:\n    l.$$$(value)\n    l.append(value)","msk_intervention":"if value not in l:\n    l.$$$(value)\n    l.append(value)"}
{"label":"remove","msk":"if item in l:\n    l.$$$(item)\n    l.insert(0, item)","msk_intervention":"if item not in l:\n    l.$$$(item)\n    l.insert(0, item)"}
{"label":"append","msk":"if element not in uniques:\n    uniques.$$$(element)","msk_intervention":"if element in uniques:\n    uniques.$$$(element)"}
{"label":"append","msk":"if why.args[0] not in (EWOULDBLOCK, EAGAIN):\n    self._exceptions.$$$(AMQPConnectionError(why))\n    self._running.clear()","msk_intervention":"if why.args[0] in (EWOULDBLOCK, EAGAIN):\n    self._exceptions.$$$(AMQPConnectionError(why))\n    self._running.clear()"}
{"label":"append","msk":"if i not in result:\n    result.$$$(i)","msk_intervention":"if i in result:\n    result.$$$(i)"}
{"label":"append","msk":"if cmd not in commands:\n    commands.$$$(cmd)","msk_intervention":"if cmd in commands:\n    commands.$$$(cmd)"}
{"label":"append","msk":"if atom.idx not in self.altconf:\n    atom_set.$$$(data(atom=atom, orig_atom=orig_atom, orig_idx=orig_idx))","msk_intervention":"if atom.idx in self.altconf:\n    atom_set.$$$(data(atom=atom, orig_atom=orig_atom, orig_idx=orig_idx))"}
{"label":"append","msk":"if child.tag not in ['author_signature', 'parent_author_signature']:\n    props.$$$(getattr(child, attr))","msk_intervention":"if child.tag in ['author_signature', 'parent_author_signature']:\n    props.$$$(getattr(child, attr))"}
{"label":"append","msk":"if list_shape_id not in self.list_shapes:\n    list_shape = Shape(id=list_shape_id, closed=True)\n    list_shape.expression = EachOf()\n    expressions = [TripleConstraint(predicate=RDF.first, valueExpr=target_type, min=0, max=1)]\n    targets = ShapeOr()\n    targets.shapeExprs = [NodeConstraint(values=[RDF.nil]), list_shape_id]\n    expressions.append(TripleConstraint(predicate=RDF.rest, valueExpr=targets))\n    list_shape.expression.expressions = expressions\n    self.shapes.append(list_shape)\n    self.list_shapes.$$$(list_shape_id)","msk_intervention":"if list_shape_id in self.list_shapes:\n    list_shape = Shape(id=list_shape_id, closed=True)\n    list_shape.expression = EachOf()\n    expressions = [TripleConstraint(predicate=RDF.first, valueExpr=target_type, min=0, max=1)]\n    targets = ShapeOr()\n    targets.shapeExprs = [NodeConstraint(values=[RDF.nil]), list_shape_id]\n    expressions.append(TripleConstraint(predicate=RDF.rest, valueExpr=targets))\n    list_shape.expression.expressions = expressions\n    self.shapes.append(list_shape)\n    self.list_shapes.$$$(list_shape_id)"}
{"label":"remove","msk":"if message in self.__messages:\n    self.__messages.$$$(message)","msk_intervention":"if message not in self.__messages:\n    self.__messages.$$$(message)"}
{"label":"remove","msk":"if mod in self.active:\n    self.active.$$$(mod)","msk_intervention":"if mod not in self.active:\n    self.active.$$$(mod)"}
{"label":"append","msk":"if path not in sys.path:\n    sys.path.$$$(path)","msk_intervention":"if path in sys.path:\n    sys.path.$$$(path)"}
{"label":"remove","msk":"if item in self.set:\n    self.set.$$$(item)\n    return True","msk_intervention":"if item not in self.set:\n    self.set.$$$(item)\n    return True"}
{"label":"append","msk":"if col not in data[0]:\n    missing.$$$(col)","msk_intervention":"if col in data[0]:\n    missing.$$$(col)"}
{"label":"append","msk":"if spec not in speclist:\n    speclist.$$$(spec)","msk_intervention":"if spec in speclist:\n    speclist.$$$(spec)"}
{"label":"append","msk":"if spec not in speclist:\n    speclist.$$$(spec)","msk_intervention":"if spec in speclist:\n    speclist.$$$(spec)"}
{"label":"remove","msk":"if 'types' in includes:\n    includes.$$$('types')","msk_intervention":"if 'types' not in includes:\n    includes.$$$('types')"}
{"label":"append","msk":"if entry not in self.current:\n    self.current.$$$(entry)","msk_intervention":"if entry in self.current:\n    self.current.$$$(entry)"}
{"label":"remove","msk":"if client in self.clients:\n    self.clients.$$$(client)\n    log('Unsubscribed client {} from channel {}'.format(client, self.name))","msk_intervention":"if client not in self.clients:\n    self.clients.$$$(client)\n    log('Unsubscribed client {} from channel {}'.format(client, self.name))"}
{"label":"append","msk":"if self.theme not in self._additional_themes:\n    self._additional_themes.$$$(self.theme)","msk_intervention":"if self.theme in self._additional_themes:\n    self._additional_themes.$$$(self.theme)"}
{"label":"append","msk":"if mv_grid_district not in self.mv_grid_districts():\n    self._mv_grid_districts.$$$(mv_grid_district)","msk_intervention":"if mv_grid_district in self.mv_grid_districts():\n    self._mv_grid_districts.$$$(mv_grid_district)"}
{"label":"append","msk":"if lv_load_area_group not in self.lv_load_area_groups():\n    self._lv_load_area_groups.$$$(lv_load_area_group)","msk_intervention":"if lv_load_area_group in self.lv_load_area_groups():\n    self._lv_load_area_groups.$$$(lv_load_area_group)"}
{"label":"remove","msk":"if callback in self._async_callbacks:\n    self._async_callbacks.$$$(callback)","msk_intervention":"if callback not in self._async_callbacks:\n    self._async_callbacks.$$$(callback)"}
{"label":"append","msk":"if author not in dataset.authors:\n    dataset.authors.$$$(author)","msk_intervention":"if author in dataset.authors:\n    dataset.authors.$$$(author)"}
{"label":"append","msk":"if callback not in self._inform_hooks[inform_name]:\n    self._inform_hooks[inform_name].$$$(callback)","msk_intervention":"if callback in self._inform_hooks[inform_name]:\n    self._inform_hooks[inform_name].$$$(callback)"}
{"label":"append","msk":"if state not in self.possible_states:\n    self.possible_states.$$$(state)","msk_intervention":"if state in self.possible_states:\n    self.possible_states.$$$(state)"}
{"label":"append","msk":"if model not in self.all_models:\n    self.all_models.$$$(model)","msk_intervention":"if model in self.all_models:\n    self.all_models.$$$(model)"}
{"label":"remove","msk":"if rm_enclosure in self._enclosure:\n    self._enclosure.$$$(rm_enclosure)","msk_intervention":"if rm_enclosure not in self._enclosure:\n    self._enclosure.$$$(rm_enclosure)"}
{"label":"append","msk":"if x not in res:\n    res.$$$(x)","msk_intervention":"if x in res:\n    res.$$$(x)"}
{"label":"append","msk":"if listener not in self.listeners:\n    self.listeners.$$$(listener)","msk_intervention":"if listener in self.listeners:\n    self.listeners.$$$(listener)"}
{"label":"remove","msk":"if listener in self.listeners:\n    self.listeners.$$$(listener)","msk_intervention":"if listener not in self.listeners:\n    self.listeners.$$$(listener)"}
{"label":"append","msk":"if x not in res:\n    res.$$$(x)","msk_intervention":"if x in res:\n    res.$$$(x)"}
{"label":"append","msk":"if n.name not in res:\n    res.$$$(n.name)","msk_intervention":"if n.name in res:\n    res.$$$(n.name)"}
{"label":"remove","msk":"if None in methods_list:\n    methods_list.$$$(None)","msk_intervention":"if None not in methods_list:\n    methods_list.$$$(None)"}
{"label":"remove","msk":"if child.plugin_type in child_classes:\n    child_classes.$$$(child.plugin_type)","msk_intervention":"if child.plugin_type not in child_classes:\n    child_classes.$$$(child.plugin_type)"}
{"label":"append","msk":"if new_item not in self[k]:\n    self[k].$$$(new_item)","msk_intervention":"if new_item in self[k]:\n    self[k].$$$(new_item)"}
{"label":"remove","msk":"if func in callbacks:\n    callbacks.$$$(func)","msk_intervention":"if func not in callbacks:\n    callbacks.$$$(func)"}
{"label":"remove","msk":"if iv in other:\n    self.$$$(iv)\n    other.$$$(iv)","msk_intervention":"if iv not in other:\n    self.$$$(iv)\n    other.$$$(iv)"}
{"label":"append","msk":"if abspath not in self._config_paths:\n    log.info('Adding {0} to paths to search'.format(abspath))\n    self._config_paths.$$$(abspath)","msk_intervention":"if abspath in self._config_paths:\n    log.info('Adding {0} to paths to search'.format(abspath))\n    self._config_paths.$$$(abspath)"}
{"label":"remove","msk":"if theta_key in self._params:\n    sky_params[theta_key] = self.theta * u.rad - angle.to(u.rad)\n    params.$$$(theta_key)","msk_intervention":"if theta_key not in self._params:\n    sky_params[theta_key] = self.theta * u.rad - angle.to(u.rad)\n    params.$$$(theta_key)"}
{"label":"remove","msk":"if self in scoop._control.execQueue.movable:\n    self.exceptionValue = CancelledError()\n    scoop._control.futureDict[self.id]._delete()\n    scoop._control.execQueue.$$$(self)\n    return True","msk_intervention":"if self not in scoop._control.execQueue.movable:\n    self.exceptionValue = CancelledError()\n    scoop._control.futureDict[self.id]._delete()\n    scoop._control.execQueue.$$$(self)\n    return True"}
{"label":"remove","msk":"if 'w' in ret:\n    ret.$$$('w')","msk_intervention":"if 'w' not in ret:\n    ret.$$$('w')"}
{"label":"append","msk":"if item not in list1:\n    list1.$$$(item)","msk_intervention":"if item in list1:\n    list1.$$$(item)"}
{"label":"append","msk":"if addr not in self.hostname_entry['addresses']:\n    self.hostname_entry['addresses'].$$$(addr)","msk_intervention":"if addr in self.hostname_entry['addresses']:\n    self.hostname_entry['addresses'].$$$(addr)"}
{"label":"append","msk":"if i not in self._codedValues:\n    self._codedValues.$$$(i)","msk_intervention":"if i in self._codedValues:\n    self._codedValues.$$$(i)"}
{"label":"append","msk":"if fn not in self._handler_dict[event]:\n    self._handler_dict[event].$$$(fn)","msk_intervention":"if fn in self._handler_dict[event]:\n    self._handler_dict[event].$$$(fn)"}
{"label":"append","msk":"if zone not in self.zones:\n    self.zones.$$$(zone)","msk_intervention":"if zone in self.zones:\n    self.zones.$$$(zone)"}
{"label":"append","msk":"if a_file.stem not in transcription_file_prefixes:\n    untranscribed_prefixes.$$$(a_file.stem)","msk_intervention":"if a_file.stem in transcription_file_prefixes:\n    untranscribed_prefixes.$$$(a_file.stem)"}
{"label":"append","msk":"if symbol not in symbollist:\n    symbollist.$$$(symbol)","msk_intervention":"if symbol in symbollist:\n    symbollist.$$$(symbol)"}
{"label":"append","msk":"if policy_uri not in self.preferred_auth_policies:\n    self.preferred_auth_policies.$$$(policy_uri)","msk_intervention":"if policy_uri in self.preferred_auth_policies:\n    self.preferred_auth_policies.$$$(policy_uri)"}
{"label":"append","msk":"if policy_uri not in self.auth_policies:\n    self.auth_policies.$$$(policy_uri)","msk_intervention":"if policy_uri in self.auth_policies:\n    self.auth_policies.$$$(policy_uri)"}
{"label":"append","msk":"if ele not in unique_list:\n    unique_list.$$$(ele)","msk_intervention":"if ele in unique_list:\n    unique_list.$$$(ele)"}
{"label":"remove","msk":"if '' in sys.path:\n    sys.path.$$$('')","msk_intervention":"if '' not in sys.path:\n    sys.path.$$$('')"}
{"label":"remove","msk":"if '' in sys.path:\n    sys.path.$$$('')","msk_intervention":"if '' not in sys.path:\n    sys.path.$$$('')"}
{"label":"remove","msk":"if '' in sys.path:\n    sys.path.$$$('')","msk_intervention":"if '' not in sys.path:\n    sys.path.$$$('')"}
{"label":"remove","msk":"if '' in sys.path:\n    sys.path.$$$('')","msk_intervention":"if '' not in sys.path:\n    sys.path.$$$('')"}
{"label":"remove","msk":"if '' in sys.path:\n    sys.path.$$$('')","msk_intervention":"if '' not in sys.path:\n    sys.path.$$$('')"}
{"label":"remove","msk":"if '' in sys.path:\n    sys.path.$$$('')","msk_intervention":"if '' not in sys.path:\n    sys.path.$$$('')"}
{"label":"remove","msk":"if id(plugin) in self._provided_by_preset:\n    self._provided_by_preset.$$$(id(plugin))","msk_intervention":"if id(plugin) not in self._provided_by_preset:\n    self._provided_by_preset.$$$(id(plugin))"}
{"label":"append","msk":"if tpl not in self.chosen_exits[block_address]:\n    self.chosen_exits[block_address].$$$(tpl)","msk_intervention":"if tpl in self.chosen_exits[block_address]:\n    self.chosen_exits[block_address].$$$(tpl)"}
{"label":"append","msk":"if evt not in events:\n    events.$$$(evt)","msk_intervention":"if evt in events:\n    events.$$$(evt)"}
{"label":"remove","msk":"if '_cls' in columns:\n    columns.$$$('_cls')","msk_intervention":"if '_cls' not in columns:\n    columns.$$$('_cls')"}
{"label":"append","msk":"if org not in hex_out:\n    hex_out.$$$(org)","msk_intervention":"if org in hex_out:\n    hex_out.$$$(org)"}
{"label":"append","msk":"if chunk_number not in self.chunk_cache:\n    missing_chunks.$$$(chunk_number)","msk_intervention":"if chunk_number in self.chunk_cache:\n    missing_chunks.$$$(chunk_number)"}
{"label":"append","msk":"if address.human_readable_address not in filtered_ips:\n    result.$$$(Text(address.human_readable_address))","msk_intervention":"if address.human_readable_address in filtered_ips:\n    result.$$$(Text(address.human_readable_address))"}
{"label":"append","msk":"if desc not in new_descriptors:\n    new_descriptors.$$$(desc)","msk_intervention":"if desc in new_descriptors:\n    new_descriptors.$$$(desc)"}
{"label":"append","msk":"if desc not in self.descriptors:\n    self.descriptors.$$$(desc)\n    self.descriptor_map[desc.name] = desc\n    self.descriptor_names.append(desc.name)","msk_intervention":"if desc in self.descriptors:\n    self.descriptors.$$$(desc)\n    self.descriptor_map[desc.name] = desc\n    self.descriptor_names.append(desc.name)"}
{"label":"append","msk":"if miller not in all_hkl:\n    all_hkl.$$$(miller)\n    normal = recp.get_cartesian_coords(miller)\n    normal \/= sp.linalg.norm(normal)\n    normal_pt = [x * energy for x in normal]\n    dual_pt = [x \/ energy for x in normal]\n    color_plane = color_ind[divmod(i, len(color_ind))[1]]\n    planes.append(WulffFacet(normal, energy, normal_pt, dual_pt, color_plane, i, hkl))","msk_intervention":"if miller in all_hkl:\n    all_hkl.$$$(miller)\n    normal = recp.get_cartesian_coords(miller)\n    normal \/= sp.linalg.norm(normal)\n    normal_pt = [x * energy for x in normal]\n    dual_pt = [x \/ energy for x in normal]\n    color_plane = color_ind[divmod(i, len(color_ind))[1]]\n    planes.append(WulffFacet(normal, energy, normal_pt, dual_pt, color_plane, i, hkl))"}
{"label":"remove","msk":"if 'EGG-INFO' in dirs:\n    dirs.$$$('EGG-INFO')","msk_intervention":"if 'EGG-INFO' not in dirs:\n    dirs.$$$('EGG-INFO')"}
{"label":"append","msk":"if i not in self.vertices[parent].children:\n    self.vertices[parent].children.$$$(i)","msk_intervention":"if i in self.vertices[parent].children:\n    self.vertices[parent].children.$$$(i)"}
{"label":"append","msk":"if i not in self.vertices[child].parents:\n    self.vertices[child].parents.$$$(i)","msk_intervention":"if i in self.vertices[child].parents:\n    self.vertices[child].parents.$$$(i)"}
{"label":"append","msk":"if item not in _list:\n    _list.$$$(item)","msk_intervention":"if item in _list:\n    _list.$$$(item)"}
{"label":"append","msk":"if destination_id not in self._open_channels:\n    self._open_channels.$$$(destination_id)\n    self.send_message(destination_id, NS_CONNECTION, {MESSAGE_TYPE: TYPE_CONNECT, 'origin': {}, 'userAgent': 'PyChromecast', 'senderInfo': {'sdkType': 2, 'version': '15.605.1.3', 'browserVersion': '44.0.2403.30', 'platform': 4, 'systemVersion': 'Macintosh; Intel Mac OS X10_10_3', 'connectionType': 1}}, no_add_request_id=True)","msk_intervention":"if destination_id in self._open_channels:\n    self._open_channels.$$$(destination_id)\n    self.send_message(destination_id, NS_CONNECTION, {MESSAGE_TYPE: TYPE_CONNECT, 'origin': {}, 'userAgent': 'PyChromecast', 'senderInfo': {'sdkType': 2, 'version': '15.605.1.3', 'browserVersion': '44.0.2403.30', 'platform': 4, 'systemVersion': 'Macintosh; Intel Mac OS X10_10_3', 'connectionType': 1}}, no_add_request_id=True)"}
{"label":"remove","msk":"if destination_id in self._open_channels:\n    try:\n        self.send_message(destination_id, NS_CONNECTION, {MESSAGE_TYPE: TYPE_CLOSE, 'origin': {}}, no_add_request_id=True, force=True)\n    except NotConnected:\n        pass\n    except Exception:\n        self.logger.exception('[%s:%s] Exception', self.fn or self.host, self.port)\n    self._open_channels.$$$(destination_id)\n    self.handle_channel_disconnected()","msk_intervention":"if destination_id not in self._open_channels:\n    try:\n        self.send_message(destination_id, NS_CONNECTION, {MESSAGE_TYPE: TYPE_CLOSE, 'origin': {}}, no_add_request_id=True, force=True)\n    except NotConnected:\n        pass\n    except Exception:\n        self.logger.exception('[%s:%s] Exception', self.fn or self.host, self.port)\n    self._open_channels.$$$(destination_id)\n    self.handle_channel_disconnected()"}
{"label":"remove","msk":"if node in self.rpo:\n    self.rpo.$$$(node)","msk_intervention":"if node not in self.rpo:\n    self.rpo.$$$(node)"}
{"label":"append","msk":"if perm not in list(self.permission_module.keys()):\n    third_party_permissions.$$$(perm)","msk_intervention":"if perm in list(self.permission_module.keys()):\n    third_party_permissions.$$$(perm)"}
{"label":"append","msk":"if x.sha256 not in fps:\n    fps.$$$(x.sha256)\n    certs.append(x)","msk_intervention":"if x.sha256 in fps:\n    fps.$$$(x.sha256)\n    certs.append(x)"}
{"label":"append","msk":"if endpoint not in self._candidate_peer_endpoints:\n    self._candidate_peer_endpoints.$$$(endpoint)","msk_intervention":"if endpoint in self._candidate_peer_endpoints:\n    self._candidate_peer_endpoints.$$$(endpoint)"}
{"label":"append","msk":"if d not in dimensions:\n    dimensions.$$$(d)","msk_intervention":"if d in dimensions:\n    dimensions.$$$(d)"}
{"label":"remove","msk":"if func in self._syn_links:\n    self._syn_links.$$$(func)","msk_intervention":"if func not in self._syn_links:\n    self._syn_links.$$$(func)"}
{"label":"remove","msk":"if value in values:\n    values.$$$(value)","msk_intervention":"if value not in values:\n    values.$$$(value)"}
{"label":"append","msk":"if recipient not in to_set:\n    to_set.$$$(recipient)","msk_intervention":"if recipient in to_set:\n    to_set.$$$(recipient)"}
{"label":"remove","msk":"if fieldname in self.unused:\n    self.unused.$$$(fieldname)","msk_intervention":"if fieldname not in self.unused:\n    self.unused.$$$(fieldname)"}
{"label":"append","msk":"if analysis.getSamplePartition() not in partitions:\n    partitions.$$$(analysis.getSamplePartition())","msk_intervention":"if analysis.getSamplePartition() in partitions:\n    partitions.$$$(analysis.getSamplePartition())"}
{"label":"remove","msk":"if tag in tags:\n    tags.$$$(tag)\n    self.item(item, tags=tuple(tags))","msk_intervention":"if tag not in tags:\n    tags.$$$(tag)\n    self.item(item, tags=tuple(tags))"}
{"label":"append","msk":"if (x_, y_) not in coords:\n    coords.$$$((x_, y_))\n    variable.append(t_)","msk_intervention":"if (x_, y_) in coords:\n    coords.$$$((x_, y_))\n    variable.append(t_)"}
{"label":"append","msk":"if index not in ix:\n    ix.$$$(index)","msk_intervention":"if index in ix:\n    ix.$$$(index)"}
{"label":"append","msk":"if rdata_ip.to_text() not in nameservers:\n    nameservers.$$$(rdata_ip.to_text())","msk_intervention":"if rdata_ip.to_text() in nameservers:\n    nameservers.$$$(rdata_ip.to_text())"}
{"label":"append","msk":"if format_specification.identifier not in parser_names:\n    parser_names.$$$(format_specification.identifier)","msk_intervention":"if format_specification.identifier in parser_names:\n    parser_names.$$$(format_specification.identifier)"}
{"label":"remove","msk":"if name in params:\n    logger.info(\"\\tFound '%s': shape=%s\", name, str(params[name].shape))\n    ext_params[name] = params[name].asnumpy()\n    remaining_param_names.$$$(name)","msk_intervention":"if name not in params:\n    logger.info(\"\\tFound '%s': shape=%s\", name, str(params[name].shape))\n    ext_params[name] = params[name].asnumpy()\n    remaining_param_names.$$$(name)"}
{"label":"append","msk":"if succ not in seen:\n    to_see.$$$(succ)","msk_intervention":"if succ in seen:\n    to_see.$$$(succ)"}
{"label":"remove","msk":"if cmdtask in self.tasks:\n    self.tasks.$$$(cmdtask)","msk_intervention":"if cmdtask not in self.tasks:\n    self.tasks.$$$(cmdtask)"}
{"label":"remove","msk":"if peer in self.Peers:\n    self.Peers.$$$(peer)","msk_intervention":"if peer not in self.Peers:\n    self.Peers.$$$(peer)"}
{"label":"remove","msk":"if addr in self.connection_queue:\n    self.connection_queue.$$$(addr)","msk_intervention":"if addr not in self.connection_queue:\n    self.connection_queue.$$$(addr)"}
{"label":"remove","msk":"if key in fields:\n    langs = resolution_order(get_language(), getattr(model, key).fallback_languages)\n    fields = fields.union((build_localized_fieldname(key, lang) for lang in langs))\n    fields.$$$(key)\n    trans.add(key)","msk_intervention":"if key not in fields:\n    langs = resolution_order(get_language(), getattr(model, key).fallback_languages)\n    fields = fields.union((build_localized_fieldname(key, lang) for lang in langs))\n    fields.$$$(key)\n    trans.add(key)"}
{"label":"append","msk":"if i not in unique_values:\n    unique_values.$$$(i)","msk_intervention":"if i in unique_values:\n    unique_values.$$$(i)"}
{"label":"append","msk":"if arn not in policy['Statement'][0]['Condition']['ForAnyValue:ArnEquals']['aws:SourceArn']:\n    self.log.warning('SQS policy is missing condition for ARN {}'.format(arn))\n    policy['Statement'][0]['Condition']['ForAnyValue:ArnEquals']['aws:SourceArn'].$$$(arn)","msk_intervention":"if arn in policy['Statement'][0]['Condition']['ForAnyValue:ArnEquals']['aws:SourceArn']:\n    self.log.warning('SQS policy is missing condition for ARN {}'.format(arn))\n    policy['Statement'][0]['Condition']['ForAnyValue:ArnEquals']['aws:SourceArn'].$$$(arn)"}
{"label":"append","msk":"if mime not in mimes:\n    mimes.$$$(mime)","msk_intervention":"if mime in mimes:\n    mimes.$$$(mime)"}
{"label":"remove","msk":"if netifaces.AF_INET in families:\n    families.$$$(netifaces.AF_INET)\n    families.append(netifaces.AF_INET)","msk_intervention":"if netifaces.AF_INET not in families:\n    families.$$$(netifaces.AF_INET)\n    families.append(netifaces.AF_INET)"}
{"label":"append","msk":"if member not in vo_members:\n    vo_members.$$$(member)","msk_intervention":"if member in vo_members:\n    vo_members.$$$(member)"}
{"label":"append","msk":"if key not in self:\n    self._keys.$$$(key)","msk_intervention":"if key in self:\n    self._keys.$$$(key)"}
{"label":"remove","msk":"if key in self._keys:\n    self._keys.$$$(key)","msk_intervention":"if key not in self._keys:\n    self._keys.$$$(key)"}
{"label":"append","msk":"if s not in self.info:\n    self.info.$$$(s)","msk_intervention":"if s in self.info:\n    self.info.$$$(s)"}
{"label":"append","msk":"if col not in symbol:\n    symbol.$$$(col)\n    remainingCols -= 1","msk_intervention":"if col in symbol:\n    symbol.$$$(col)\n    remainingCols -= 1"}
{"label":"append","msk":"if key not in keys:\n    keys.$$$(key)","msk_intervention":"if key in keys:\n    keys.$$$(key)"}
{"label":"append","msk":"if item not in self.__transaction_index_map:\n    self.__items.$$$(item)\n    self.__transaction_index_map[item] = set()","msk_intervention":"if item in self.__transaction_index_map:\n    self.__items.$$$(item)\n    self.__transaction_index_map[item] = set()"}
{"label":"append","msk":"if param not in self.time_vary:\n    self.time_vary.$$$(param)","msk_intervention":"if param in self.time_vary:\n    self.time_vary.$$$(param)"}
{"label":"append","msk":"if param not in self.time_inv:\n    self.time_inv.$$$(param)","msk_intervention":"if param in self.time_inv:\n    self.time_inv.$$$(param)"}
{"label":"remove","msk":"if param in self.time_vary:\n    self.time_vary.$$$(param)","msk_intervention":"if param not in self.time_vary:\n    self.time_vary.$$$(param)"}
{"label":"remove","msk":"if param in self.time_inv:\n    self.time_inv.$$$(param)","msk_intervention":"if param not in self.time_inv:\n    self.time_inv.$$$(param)"}
{"label":"remove","msk":"if 'self' in arg_names:\n    arg_names.$$$('self')","msk_intervention":"if 'self' not in arg_names:\n    arg_names.$$$('self')"}
{"label":"append","msk":"if n not in self.startup_nodes:\n    self.startup_nodes.$$$(n)","msk_intervention":"if n in self.startup_nodes:\n    self.startup_nodes.$$$(n)"}
{"label":"append","msk":"if i not in out:\n    out.$$$(i)","msk_intervention":"if i in out:\n    out.$$$(i)"}
{"label":"remove","msk":"if key in keys:\n    keys.$$$(key)","msk_intervention":"if key not in keys:\n    keys.$$$(key)"}
{"label":"remove","msk":"if dependency in top:\n    top.$$$(dependency)","msk_intervention":"if dependency not in top:\n    top.$$$(dependency)"}
{"label":"append","msk":"if i not in result:\n    result.$$$(i)","msk_intervention":"if i in result:\n    result.$$$(i)"}
{"label":"append","msk":"if style not in style_whitelist:\n    style_whitelist.$$$(style)","msk_intervention":"if style in style_whitelist:\n    style_whitelist.$$$(style)"}
{"label":"append","msk":"if buffer not in self.buffers:\n    logger.debug('adding new buffer {!r}'.format(buffer))\n    self.buffers.$$$(buffer)","msk_intervention":"if buffer in self.buffers:\n    logger.debug('adding new buffer {!r}'.format(buffer))\n    self.buffers.$$$(buffer)"}
{"label":"append","msk":"if neighbor not in seen[node]:\n    seen[neighbor].add(node)\n    R.$$$(neighbor)\n    node = neighbor","msk_intervention":"if neighbor in seen[node]:\n    seen[neighbor].add(node)\n    R.$$$(neighbor)\n    node = neighbor"}
{"label":"append","msk":"if listener not in self.listeners:\n    self.listeners.$$$(listener)","msk_intervention":"if listener in self.listeners:\n    self.listeners.$$$(listener)"}
{"label":"remove","msk":"if bp in bpset:\n    bpset.$$$(bp)\n    self.system.get_thread(tid).clear_tf()","msk_intervention":"if bp not in bpset:\n    bpset.$$$(bp)\n    self.system.get_thread(tid).clear_tf()"}
{"label":"remove","msk":"if tid in self.__tracing:\n    self.__tracing.$$$(tid)","msk_intervention":"if tid not in self.__tracing:\n    self.__tracing.$$$(tid)"}
{"label":"append","msk":"if ctx_fetcher not in self.ctx_fetchers:\n    self.ctx_fetchers.$$$(ctx_fetcher)","msk_intervention":"if ctx_fetcher in self.ctx_fetchers:\n    self.ctx_fetchers.$$$(ctx_fetcher)"}
{"label":"append","msk":"if (host, port) not in hosts:\n    hosts.$$$((host, port))","msk_intervention":"if (host, port) in hosts:\n    hosts.$$$((host, port))"}
{"label":"append","msk":"if handler not in handlerList:\n    handlerList.$$$(handler)","msk_intervention":"if handler in handlerList:\n    handlerList.$$$(handler)"}
{"label":"append","msk":"if handler not in self.__generalHandlers:\n    self.__generalHandlers.$$$(handler)","msk_intervention":"if handler in self.__generalHandlers:\n    self.__generalHandlers.$$$(handler)"}
{"label":"remove","msk":"if handler in self.__generalHandlers:\n    self.__generalHandlers.$$$(handler)","msk_intervention":"if handler not in self.__generalHandlers:\n    self.__generalHandlers.$$$(handler)"}
{"label":"remove","msk":"if '.git' in repo_dirs:\n    repo_dirs.$$$('.git')","msk_intervention":"if '.git' not in repo_dirs:\n    repo_dirs.$$$('.git')"}
{"label":"append","msk":"if key not in known:\n    outlist.$$$(key)","msk_intervention":"if key in known:\n    outlist.$$$(key)"}
{"label":"append","msk":"if state not in self.site_states[site]:\n    self.site_states[site].$$$(state)","msk_intervention":"if state in self.site_states[site]:\n    self.site_states[site].$$$(state)"}
{"label":"append","msk":"if activity_type not in self.activity_types:\n    self.activity_types.$$$(activity_type)","msk_intervention":"if activity_type in self.activity_types:\n    self.activity_types.$$$(activity_type)"}
{"label":"append","msk":"if section_name not in section_name_list:\n    self.section_headings.$$$(section_name)","msk_intervention":"if section_name in section_name_list:\n    self.section_headings.$$$(section_name)"}
{"label":"append","msk":"if item['origin'] not in repositories:\n    repositories.$$$(item['origin'])","msk_intervention":"if item['origin'] in repositories:\n    repositories.$$$(item['origin'])"}
{"label":"append","msk":"if item not in uniques:\n    uniques.$$$(item)","msk_intervention":"if item in uniques:\n    uniques.$$$(item)"}
{"label":"remove","msk":"if check in self.checks_in_progress:\n    self.checks_in_progress.$$$(check)","msk_intervention":"if check not in self.checks_in_progress:\n    self.checks_in_progress.$$$(check)"}
{"label":"append","msk":"if self.ip_prefix not in prefixes:\n    prefixes.$$$(self.ip_prefix)\n    self.log.info('announcing %s for %s', self.ip_prefix, self.name)\n    return True","msk_intervention":"if self.ip_prefix in prefixes:\n    prefixes.$$$(self.ip_prefix)\n    self.log.info('announcing %s for %s', self.ip_prefix, self.name)\n    return True"}
{"label":"append","msk":"if pypath not in sys.path:\n    sys.path.$$$(pypath)","msk_intervention":"if pypath in sys.path:\n    sys.path.$$$(pypath)"}
{"label":"remove","msk":"if r in archs:\n    archs.$$$(r)","msk_intervention":"if r not in archs:\n    archs.$$$(r)"}
{"label":"append","msk":"if s not in sdict:\n    sdict[s] = 1\n    suffixes.$$$(s)","msk_intervention":"if s in sdict:\n    sdict[s] = 1\n    suffixes.$$$(s)"}
{"label":"append","msk":"if flag not in key_flags:\n    key_flags.$$$(flag)","msk_intervention":"if flag in key_flags:\n    key_flags.$$$(flag)"}
{"label":"append","msk":"if x not in parent:\n    parent.$$$(x)\n    self.changed()","msk_intervention":"if x in parent:\n    parent.$$$(x)\n    self.changed()"}
{"label":"append","msk":"if item not in seen:\n    seen.add(item)\n    new.$$$(item)","msk_intervention":"if item in seen:\n    seen.add(item)\n    new.$$$(item)"}
{"label":"append","msk":"if item not in values:\n    ret.$$$(item)","msk_intervention":"if item in values:\n    ret.$$$(item)"}
{"label":"append","msk":"if target not in self._pending['metadata']:\n    await self.rawmsg('METADATA', target, 'LIST')\n    self._metadata_queue.$$$(target)\n    self._metadata_info[target] = {}\n    self._pending['metadata'][target] = self.eventloop.create_future()","msk_intervention":"if target in self._pending['metadata']:\n    await self.rawmsg('METADATA', target, 'LIST')\n    self._metadata_queue.$$$(target)\n    self._metadata_info[target] = {}\n    self._pending['metadata'][target] = self.eventloop.create_future()"}
{"label":"append","msk":"if coro not in self._notify:\n    self._notify.$$$(coro)\n    return True","msk_intervention":"if coro in self._notify:\n    self._notify.$$$(coro)\n    return True"}
{"label":"remove","msk":"if coro in self._notify:\n    self._notify.$$$(coro)\n    return True","msk_intervention":"if coro not in self._notify:\n    self._notify.$$$(coro)\n    return True"}
{"label":"append","msk":"if key not in dir_items:\n    dir_items.$$$(key)\n    self.put(dir_key, dir_items)","msk_intervention":"if key in dir_items:\n    dir_items.$$$(key)\n    self.put(dir_key, dir_items)"}
{"label":"remove","msk":"if 'sort_order' in unique_together:\n    unique_fields = list(unique_together)\n    unique_fields.$$$('sort_order')\n    return ['%s_id' % f for f in unique_fields]","msk_intervention":"if 'sort_order' not in unique_together:\n    unique_fields = list(unique_together)\n    unique_fields.$$$('sort_order')\n    return ['%s_id' % f for f in unique_fields]"}
{"label":"remove","msk":"if tup in self.cb[name]:\n    self.cb[name].$$$(tup)","msk_intervention":"if tup not in self.cb[name]:\n    self.cb[name].$$$(tup)"}
{"label":"append","msk":"if observer not in self._observers[signal]:\n    self._observers[signal].$$$(observer)","msk_intervention":"if observer in self._observers[signal]:\n    self._observers[signal].$$$(observer)"}
{"label":"remove","msk":"if observer in self._observers[signal]:\n    self._observers[signal].$$$(observer)","msk_intervention":"if observer not in self._observers[signal]:\n    self._observers[signal].$$$(observer)"}
{"label":"append","msk":"if u not in subset:\n    subset.$$$(u)","msk_intervention":"if u in subset:\n    subset.$$$(u)"}
{"label":"remove","msk":"if self in self._observers:\n    self._observers.$$$(self)","msk_intervention":"if self not in self._observers:\n    self._observers.$$$(self)"}
{"label":"append","msk":"if note_val not in self.components:\n    self.components.$$$(note_val)\n    self.components.sort()","msk_intervention":"if note_val in self.components:\n    self.components.$$$(note_val)\n    self.components.sort()"}
{"label":"remove","msk":"if compulsory_field in all_fields:\n    all_fields.$$$(compulsory_field)","msk_intervention":"if compulsory_field not in all_fields:\n    all_fields.$$$(compulsory_field)"}
{"label":"append","msk":"if key[group_index] not in values:\n    values.$$$(key[group_index])","msk_intervention":"if key[group_index] in values:\n    values.$$$(key[group_index])"}
{"label":"append","msk":"if feature not in install_json.get('features'):\n    install_json['features'].$$$(feature)\n    updated = True\n    self.package_data['updates'].append({'action': 'Updated Feature:', 'output': feature})","msk_intervention":"if feature in install_json.get('features'):\n    install_json['features'].$$$(feature)\n    updated = True\n    self.package_data['updates'].append({'action': 'Updated Feature:', 'output': feature})"}
{"label":"append","msk":"if callback not in self._callbacks:\n    self._callbacks.$$$(callback)","msk_intervention":"if callback in self._callbacks:\n    self._callbacks.$$$(callback)"}
{"label":"append","msk":"if file_to_add not in self.files:\n    self.files.$$$(file_to_add)","msk_intervention":"if file_to_add in self.files:\n    self.files.$$$(file_to_add)"}
{"label":"append","msk":"if server not in self.servers:\n    self.servers.$$$(server)","msk_intervention":"if server in self.servers:\n    self.servers.$$$(server)"}
{"label":"append","msk":"if log not in all_logs:\n    new_logs.$$$(log)","msk_intervention":"if log in all_logs:\n    new_logs.$$$(log)"}
{"label":"append","msk":"if at_match not in ret:\n    ret.$$$(at_match)","msk_intervention":"if at_match in ret:\n    ret.$$$(at_match)"}
{"label":"append","msk":"if marker not in merged:\n    merged.$$$(marker)","msk_intervention":"if marker in merged:\n    merged.$$$(marker)"}
{"label":"append","msk":"if elt not in target:\n    target.$$$(elt)","msk_intervention":"if elt in target:\n    target.$$$(elt)"}
{"label":"append","msk":"if rank not in self.meaningless_taxonomic_names:\n    new_tax_list.$$$(rank)","msk_intervention":"if rank in self.meaningless_taxonomic_names:\n    new_tax_list.$$$(rank)"}
{"label":"append","msk":"if func not in l:\n    l.$$$(func)","msk_intervention":"if func in l:\n    l.$$$(func)"}
{"label":"append","msk":"if downstream_node not in nodes_seen:\n    nodes_seen.add(downstream_node)\n    nodes.$$$(downstream_node)","msk_intervention":"if downstream_node in nodes_seen:\n    nodes_seen.add(downstream_node)\n    nodes.$$$(downstream_node)"}
{"label":"append","msk":"if each not in cleaned:\n    cleaned.$$$(each)","msk_intervention":"if each in cleaned:\n    cleaned.$$$(each)"}
{"label":"append","msk":"if flag not in key_flags:\n    key_flags.$$$(flag)","msk_intervention":"if flag in key_flags:\n    key_flags.$$$(flag)"}
{"label":"remove","msk":"if callback in self.callbacks:\n    self.callbacks.$$$(callback)","msk_intervention":"if callback not in self.callbacks:\n    self.callbacks.$$$(callback)"}
{"label":"remove","msk":"if greenlet in self.greenlets:\n    self.greenlets.$$$(greenlet)","msk_intervention":"if greenlet not in self.greenlets:\n    self.greenlets.$$$(greenlet)"}
{"label":"append","msk":"if task_name not in self.tasks:\n    self._add_task(task_name)\n    existing_results['tasks'].$$$(task_name)\n    existing_results['results'].append([])","msk_intervention":"if task_name in self.tasks:\n    self._add_task(task_name)\n    existing_results['tasks'].$$$(task_name)\n    existing_results['results'].append([])"}
{"label":"remove","msk":"if alias_name in aliases:\n    aliases.$$$(alias_name)","msk_intervention":"if alias_name not in aliases:\n    aliases.$$$(alias_name)"}
{"label":"remove","msk":"if '\\\\' in chars:\n    chars.$$$('\\\\')\n    chars.insert(0, '\\\\')","msk_intervention":"if '\\\\' not in chars:\n    chars.$$$('\\\\')\n    chars.insert(0, '\\\\')"}
{"label":"remove","msk":"if cur_path in paths:\n    paths.$$$(cur_path)\n    os.environ['PATH'] = ':'.join(paths)","msk_intervention":"if cur_path not in paths:\n    paths.$$$(cur_path)\n    os.environ['PATH'] = ':'.join(paths)"}
{"label":"append","msk":"if sample not in samples:\n    samples.$$$(sample)","msk_intervention":"if sample in samples:\n    samples.$$$(sample)"}
{"label":"append","msk":"if child not in subclasses:\n    subclasses.add(child)\n    work.$$$(child)","msk_intervention":"if child in subclasses:\n    subclasses.add(child)\n    work.$$$(child)"}
{"label":"append","msk":"if parent not in fks[son][0]:\n    fks[son][0].$$$(parent)","msk_intervention":"if parent in fks[son][0]:\n    fks[son][0].$$$(parent)"}
{"label":"append","msk":"if column not in self._table_columns[table]:\n    self._table_columns[table].$$$(column)","msk_intervention":"if column in self._table_columns[table]:\n    self._table_columns[table].$$$(column)"}
{"label":"append","msk":"if attr not in table_columns:\n    table_columns.$$$(attr)","msk_intervention":"if attr in table_columns:\n    table_columns.$$$(attr)"}
{"label":"append","msk":"if item not in blocked:\n    blocked.add(item)\n    difference.$$$(item)","msk_intervention":"if item in blocked:\n    blocked.add(item)\n    difference.$$$(item)"}
{"label":"append","msk":"if item not in b:\n    d.$$$(item)","msk_intervention":"if item in b:\n    d.$$$(item)"}
{"label":"remove","msk":"if port in self._used_tcp_ports:\n    self._used_tcp_ports.$$$(port)\n    project.remove_tcp_port(port)\n    log.debug('TCP port {} has been released'.format(port))","msk_intervention":"if port not in self._used_tcp_ports:\n    self._used_tcp_ports.$$$(port)\n    project.remove_tcp_port(port)\n    log.debug('TCP port {} has been released'.format(port))"}
{"label":"remove","msk":"if port in self._used_udp_ports:\n    self._used_udp_ports.$$$(port)\n    project.remove_udp_port(port)\n    log.debug('UDP port {} has been released'.format(port))","msk_intervention":"if port not in self._used_udp_ports:\n    self._used_udp_ports.$$$(port)\n    project.remove_udp_port(port)\n    log.debug('UDP port {} has been released'.format(port))"}
{"label":"append","msk":"if compute.id not in ['local', 'vm']:\n    res.$$$({'vmname': compute.name})","msk_intervention":"if compute.id in ['local', 'vm']:\n    res.$$$({'vmname': compute.name})"}
{"label":"remove","msk":"if dynamips_id in self._dynamips_ids[project_id]:\n    self._dynamips_ids[project_id].$$$(dynamips_id)","msk_intervention":"if dynamips_id not in self._dynamips_ids[project_id]:\n    self._dynamips_ids[project_id].$$$(dynamips_id)"}
{"label":"remove","msk":"if port in self._used_tcp_ports:\n    self._used_tcp_ports.$$$(port)","msk_intervention":"if port not in self._used_tcp_ports:\n    self._used_tcp_ports.$$$(port)"}
{"label":"remove","msk":"if port in self._used_udp_ports:\n    self._used_udp_ports.$$$(port)","msk_intervention":"if port not in self._used_udp_ports:\n    self._used_udp_ports.$$$(port)"}
{"label":"remove","msk":"if node in self._nodes:\n    yield from node.delete()\n    self._nodes.$$$(node)","msk_intervention":"if node not in self._nodes:\n    yield from node.delete()\n    self._nodes.$$$(node)"}
{"label":"remove","msk":"if name in self._allocated_node_names:\n    self._allocated_node_names.$$$(name)","msk_intervention":"if name not in self._allocated_node_names:\n    self._allocated_node_names.$$$(name)"}
{"label":"append","msk":"if role not in user.roles:\n    user.roles.$$$(role)\n    self.put(user)\n    return True","msk_intervention":"if role in user.roles:\n    user.roles.$$$(role)\n    self.put(user)\n    return True"}
{"label":"remove","msk":"if role in user.roles:\n    rv = True\n    user.roles.$$$(role)\n    self.put(user)","msk_intervention":"if role not in user.roles:\n    rv = True\n    user.roles.$$$(role)\n    self.put(user)"}
{"label":"append","msk":"if fld not in fld_seen:\n    flds.$$$(fld)\n    fld_seen.add(fld)","msk_intervention":"if fld in fld_seen:\n    flds.$$$(fld)\n    fld_seen.add(fld)"}
{"label":"append","msk":"if download_request not in unique_requests_map:\n    unique_requests_map[download_request] = len(unique_download_list)\n    unique_download_list.$$$(download_request)","msk_intervention":"if download_request in unique_requests_map:\n    unique_requests_map[download_request] = len(unique_download_list)\n    unique_download_list.$$$(download_request)"}
{"label":"append","msk":"if item not in new:\n    new.$$$(item)","msk_intervention":"if item in new:\n    new.$$$(item)"}
{"label":"append","msk":"if filterclass not in self.filters:\n    self.filters.$$$(filterclass)","msk_intervention":"if filterclass in self.filters:\n    self.filters.$$$(filterclass)"}
{"label":"remove","msk":"if self.my_hostport in new_peers:\n    new_peers.$$$(self.my_hostport)","msk_intervention":"if self.my_hostport not in new_peers:\n    new_peers.$$$(self.my_hostport)"}
{"label":"append","msk":"if field not in op_data.keys():\n    missing.$$$(field)","msk_intervention":"if field in op_data.keys():\n    missing.$$$(field)"}
{"label":"append","msk":"if field not in history_snapshot.keys():\n    missing.$$$(field)","msk_intervention":"if field in history_snapshot.keys():\n    missing.$$$(field)"}
{"label":"remove","msk":"if router in self.routes:\n    self.routes.$$$(router)\n    router._parent = None","msk_intervention":"if router not in self.routes:\n    self.routes.$$$(router)\n    router._parent = None"}
{"label":"remove","msk":"if value in _set:\n    _set.$$$(value)\n    self._list.discard(value)","msk_intervention":"if value not in _set:\n    _set.$$$(value)\n    self._list.discard(value)"}
{"label":"remove","msk":"if tool_name in hidden_tools:\n    hidden_tools.$$$(tool_name)\n    self._flush_tools()","msk_intervention":"if tool_name not in hidden_tools:\n    hidden_tools.$$$(tool_name)\n    self._flush_tools()"}
{"label":"remove","msk":"if self.local_packages_path in paths:\n    paths.$$$(self.local_packages_path)","msk_intervention":"if self.local_packages_path not in paths:\n    paths.$$$(self.local_packages_path)"}
{"label":"append","msk":"if word.text.lower() not in dump_list:\n    keep_positions.$$$(word.i)","msk_intervention":"if word.text.lower() in dump_list:\n    keep_positions.$$$(word.i)"}
{"label":"append","msk":"if operation not in self.operations:\n    self.operations.$$$(operation)","msk_intervention":"if operation in self.operations:\n    self.operations.$$$(operation)"}
{"label":"append","msk":"if operation not in self.ops:\n    self.ops.$$$(operation)","msk_intervention":"if operation in self.ops:\n    self.ops.$$$(operation)"}
{"label":"remove","msk":"if container_id in self._watching:\n    self._watching.$$$(container_id)\n    self._container_had_error.add(container_id)\n    try:\n        await self._docker_interface.kill_container(container_id)\n    except:\n        pass","msk_intervention":"if container_id not in self._watching:\n    self._watching.$$$(container_id)\n    self._container_had_error.add(container_id)\n    try:\n        await self._docker_interface.kill_container(container_id)\n    except:\n        pass"}
{"label":"append","msk":"if id(p) not in children_p:\n    children.$$$(ParameterModule(p))","msk_intervention":"if id(p) in children_p:\n    children.$$$(ParameterModule(p))"}
{"label":"remove","msk":"if o in itos:\n    itos.$$$(o)","msk_intervention":"if o not in itos:\n    itos.$$$(o)"}
{"label":"append","msk":"if a not in unique:\n    unique.add(a)\n    output.$$$(a)","msk_intervention":"if a in unique:\n    unique.add(a)\n    output.$$$(a)"}
{"label":"append","msk":"if graph_input.name not in _params:\n    shape = [val.dim_value for val in graph_input.type.tensor_type.shape.dim]\n    input_data.$$$((graph_input.name, tuple(shape)))","msk_intervention":"if graph_input.name in _params:\n    shape = [val.dim_value for val in graph_input.type.tensor_type.shape.dim]\n    input_data.$$$((graph_input.name, tuple(shape)))"}
{"label":"append","msk":"if child_node not in seen_nodes:\n    seen_nodes.add(child_node)\n    next_nodes.$$$(child_node)","msk_intervention":"if child_node in seen_nodes:\n    seen_nodes.add(child_node)\n    next_nodes.$$$(child_node)"}
{"label":"append","msk":"if s not in plist:\n    plist.$$$(s)","msk_intervention":"if s in plist:\n    plist.$$$(s)"}
{"label":"append","msk":"if x not in self.reverse_list[y]:\n    self.reverse_list[y].$$$(x)","msk_intervention":"if x in self.reverse_list[y]:\n    self.reverse_list[y].$$$(x)"}
{"label":"append","msk":"if cookie.domain not in domains:\n    domains.$$$(cookie.domain)","msk_intervention":"if cookie.domain in domains:\n    domains.$$$(cookie.domain)"}
{"label":"append","msk":"if cookie.path not in paths:\n    paths.$$$(cookie.path)","msk_intervention":"if cookie.path in paths:\n    paths.$$$(cookie.path)"}
{"label":"remove","msk":"if role in self.roles:\n    self.roles.$$$(role)","msk_intervention":"if role not in self.roles:\n    self.roles.$$$(role)"}
{"label":"append","msk":"if e not in out:\n    out.$$$(e)","msk_intervention":"if e in out:\n    out.$$$(e)"}
{"label":"append","msk":"if param not in out:\n    out.$$$(param)","msk_intervention":"if param in out:\n    out.$$$(param)"}
{"label":"append","msk":"if item not in a:\n    result.$$$(item)","msk_intervention":"if item in a:\n    result.$$$(item)"}
{"label":"append","msk":"if target_type not in __viable_source_types_cache:\n    __vst_cached_types.$$$(target_type)\n    __viable_source_types_cache[target_type] = __viable_source_types_real(target_type)","msk_intervention":"if target_type in __viable_source_types_cache:\n    __vst_cached_types.$$$(target_type)\n    __viable_source_types_cache[target_type] = __viable_source_types_real(target_type)"}
{"label":"append","msk":"if generator not in __viable_source_types_cache:\n    __vstg_cached_generators.$$$(generator)\n    __viable_source_types_cache[generator] = viable_source_types_for_generator_real(generator)","msk_intervention":"if generator in __viable_source_types_cache:\n    __vstg_cached_generators.$$$(generator)\n    __viable_source_types_cache[generator] = viable_source_types_for_generator_real(generator)"}
{"label":"append","msk":"if k not in node_names:\n    keys_to_delete.$$$(k)","msk_intervention":"if k in node_names:\n    keys_to_delete.$$$(k)"}
{"label":"remove","msk":"if _id in self.history:\n    self.history.$$$(_id)","msk_intervention":"if _id not in self.history:\n    self.history.$$$(_id)"}
{"label":"append","msk":"if token not in words_in_train_data:\n    self._id2word.$$$(token)","msk_intervention":"if token in words_in_train_data:\n    self._id2word.$$$(token)"}
{"label":"append","msk":"if template not in self.cached:\n    self.cache_file(template)\n    self.cached.$$$(template)","msk_intervention":"if template in self.cached:\n    self.cache_file(template)\n    self.cached.$$$(template)"}
{"label":"append","msk":"if key not in self.map:\n    self.map[key] = len(self.items)\n    self.items.$$$(key)","msk_intervention":"if key in self.map:\n    self.map[key] = len(self.items)\n    self.items.$$$(key)"}
{"label":"append","msk":"if _class not in expanded_classes:\n    expanded_classes.$$$(_class)","msk_intervention":"if _class in expanded_classes:\n    expanded_classes.$$$(_class)"}
